Trying File ./examples/rus.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': [], 'id': 'input_qubit'}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 2, 'id': 'ancilla'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'input_qubit', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'input_qubit', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'rz', 'mods': [], 'exps': [3.142857142857143], 'indexIdList': [{'id': 'input_qubit', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'input_qubit', 'exprList': []}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'output_qubit', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'input_qubit', 'exprList': []}]}}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'flags', 'designator': 2, 'expr': 0}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'output_qubit'}}]
Success!
Trying File ./examples/t1.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: []
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'noDesignator', 'id': 'stride', 'expr': 0, 'dtype': 'timingType'}}, {'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'points', 'expr': 50}}, {'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'shots', 'expr': 1000}}, {'type': 'classicalDeclaration', 'decl': {'type': 'single', 'id': 'counts0', 'designator': 32}}, {'type': 'classicalDeclaration', 'decl': {'type': 'single', 'id': 'counts1', 'designator': 32, 'expr': 0}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c0'}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c1'}}]
Success!
Trying File ./examples/rb.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 2, 'id': 'q'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cz', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}, {'id': 'q', 'exprList': [1]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 's', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cz', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}, {'id': 'q', 'exprList': [1]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 's', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'z', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': []}]}}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c', 'designator': 2}}]
Success!
Trying File ./examples/qft.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 4, 'id': 'q'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'x', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'x', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [2]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cphase', 'mods': [], 'exps': [1.5714285714285714], 'indexIdList': [{'id': 'q', 'exprList': [1]}, {'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [1]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cphase', 'mods': [], 'exps': [0.7857142857142857], 'indexIdList': [{'id': 'q', 'exprList': [2]}, {'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cphase', 'mods': [], 'exps': [1.5714285714285714], 'indexIdList': [{'id': 'q', 'exprList': [2]}, {'id': 'q', 'exprList': [1]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [2]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cphase', 'mods': [], 'exps': [0.39285714285714285], 'indexIdList': [{'id': 'q', 'exprList': [3]}, {'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cphase', 'mods': [], 'exps': [0.7857142857142857], 'indexIdList': [{'id': 'q', 'exprList': [3]}, {'id': 'q', 'exprList': [1]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cphase', 'mods': [], 'exps': [1.5714285714285714], 'indexIdList': [{'id': 'q', 'exprList': [3]}, {'id': 'q', 'exprList': [2]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [3]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': []}]}}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c', 'designator': 4}}]
Success!
Trying File ./examples/dd.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'timingStatement', 'stmt': None}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'noDesignator', 'id': 's', 'dtype': 'timingType'}}, {'type': 'classicalDeclaration', 'decl': {'type': 'noDesignator', 'id': 'start_stretch', 'expr': 0, 'dtype': 'timingType'}}, {'type': 'classicalDeclaration', 'decl': {'type': 'noDesignator', 'id': 'middle_stretch', 'expr': 0, 'dtype': 'timingType'}}, {'type': 'classicalDeclaration', 'decl': {'type': 'noDesignator', 'id': 'end_stretch', 'expr': 0, 'dtype': 'timingType'}}]
Success!
Trying File ./examples/msd.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'workspace', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'buffer', 'exprList': []}]}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 33, 'id': 'workspace'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 0, 'id': 'buffer'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'distill_and_buffer', 'mods': [], 'exps': [0], 'indexIdList': [{'id': 'workspace', 'exprList': []}, {'id': 'buffer', 'exprList': []}]}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 5, 'id': 'q'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cx', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}, {'id': 'q', 'exprList': [1]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'Ty', 'mods': [], 'exps': [0], 'indexIdList': [{'id': 'q', 'exprList': [0]}, {'id': 'buffer', 'exprList': []}]}}, {'type': 'assignmentStatement', 'assign': {'typeid': 'address', 'op': '+=', 'expr': 1}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cx', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}, {'id': 'q', 'exprList': [1]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'Ty', 'mods': [], 'exps': [0], 'indexIdList': [{'id': 'q', 'exprList': [1]}, {'id': 'buffer', 'exprList': []}]}}, {'type': 'assignmentStatement', 'assign': {'typeid': 'address', 'op': '+=', 'expr': 1}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'buffer_size', 'expr': 6}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c', 'designator': 5}}, {'type': 'classicalDeclaration', 'decl': {'type': 'single', 'id': 'address', 'designator': 32}}]
Success!
Trying File ./examples/rng.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': [], 'id': 'a'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'a', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'a', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'x', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'a', 'exprList': []}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': None, 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'a', 'exprList': []}]}}}]
Declarations: []
Success!
Trying File ./examples/adder.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 1, 'id': 'cin'}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 4, 'id': 'a'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'cin', 'exprList': []}]}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 4, 'id': 'b'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'a', 'exprList': []}]}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 1, 'id': 'cout'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'b', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'cout', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'majority', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'cin', 'exprList': [0]}, {'id': 'b', 'exprList': [0]}, {'id': 'a', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cx', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'a', 'exprList': [3]}, {'id': 'cout', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'unmaj', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'cin', 'exprList': [0]}, {'id': 'b', 'exprList': [0]}, {'id': 'a', 'exprList': [0]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'ans', 'range': {'type': 'rangeDef', 'exp1': 0, 'exp2': 3, 'exp3': None}, 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'b', 'range': {'type': 'rangeDef', 'exp1': 0, 'exp2': 3, 'exp3': None}, 'exprList': []}]}}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'ans', 'exprList': [4]}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'cout', 'exprList': [0]}]}}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'ans', 'designator': 5}}, {'type': 'classicalDeclaration', 'decl': {'type': 'single', 'id': 'a_in', 'designator': 4, 'expr': 1}}, {'type': 'classicalDeclaration', 'decl': {'type': 'single', 'id': 'b_in', 'designator': 4, 'expr': 15}}]
Success!
Trying File ./examples/vqe.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'assignmentStatement', 'assign': {'typeid': 'energy', 'op': '=', 'expr': 0}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'n', 'expr': 10}}, {'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'layers', 'expr': 3}}, {'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'prec', 'expr': 16}}, {'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'shots', 'expr': 1000}}, {'type': 'classicalDeclaration'}]
Success!
Trying File ./examples/varteleport.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': [], 'id': 'input_qubit'}}, {'type': 'expressionStatement', 'expr': 0}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 0, 'id': 'q'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'rz', 'mods': [], 'exps': [0.7857142857142857], 'indexIdList': [{'id': 'input_qubit', 'exprList': []}]}}, {'type': 'aliasStatement', 'id': 'io', 'value': {'id': 'input_qubit', 'exprList': []}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'io', 'exprList': []}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'output_qubit', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'io', 'exprList': []}]}}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'n_pairs', 'expr': 10}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'output_qubit'}}]
Success!
Trying File ./examples/alignment.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 3, 'id': 'q'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cx', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}, {'id': 'q', 'exprList': [1]}]}}, {'type': 'timingStatement', 'stmt': None}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'U', 'mods': [], 'exps': [0.7857142857142857, 0, 1.5714285714285714], 'indexIdList': [{'id': 'q', 'exprList': [2]}]}}, {'type': 'timingStatement', 'stmt': None}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'noDesignator', 'id': 'g', 'dtype': 'timingType'}}]
Success!
Trying File ./examples/pong.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'timingStatement', 'stmt': None}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': [0]}, {'id': 'q', 'exprList': [1]}]}}]
Declarations: []
Success!
Trying File ./examples/teleport.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 3, 'id': 'q'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'U', 'mods': [], 'exps': [0, 0, 0], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [1]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cx', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [1]}, {'id': 'q', 'exprList': [2]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cx', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}, {'id': 'q', 'exprList': [1]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c0', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c1', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [1]}]}}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'post', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [2]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c2', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [2]}]}}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c0'}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c1'}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c2'}}]
Success!
Trying File ./examples/qec.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 3, 'id': 'q'}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 2, 'id': 'a'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'a', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'x', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'assignmentStatement', 'assign': {'typeid': 'syn', 'op': '=', 'expr': 0}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': []}]}}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c', 'designator': 3}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'syn', 'designator': 2}}]
Success!
Trying File ./examples/scqec.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 0, 'id': 'data'}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': -1, 'id': 'ancilla'}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'd', 'expr': 3}}, {'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'm', 'expr': 10}}, {'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'shots', 'expr': 1000}}, {'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'n', 'expr': 2}}, {'type': 'classicalDeclaration', 'decl': {'type': 'single', 'id': 'failures', 'designator': 32}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'layer', 'designator': -1}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'data_outcomes', 'designator': 0}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'outcome'}}]
Success!
Trying File ./examples/qpt.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': [], 'id': 'q'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'pre', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'post', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': []}]}}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c'}}]
Success!
Trying File ./examples/gateteleport.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 3, 'id': 'q'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'rz', 'mods': [], 'exps': [0.7857142857142857], 'indexIdList': [{'id': 'a', 'exprList': []}]}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 3, 'id': 'a'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cx', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': []}, {'id': 'a', 'exprList': []}]}}, {'type': 'assignmentStatement', 'assign': {'typeid': 'r', 'op': '=', 'expr': 0}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'n', 'expr': 3}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'r'}}]
Success!
Trying File ./examples/inverseqft2.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 4, 'id': 'q'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c0', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [1]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c1', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [1]}]}}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [2]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c2', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [2]}]}}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [3]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c3', 'exprList': []}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [3]}]}}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c0'}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c1'}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c2'}}, {'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c3'}}]
Success!
Trying File ./examples/inverseqft1.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': 4, 'id': 'q'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'barrier', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c', 'exprList': [0]}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [0]}]}}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [1]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c', 'exprList': [1]}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [1]}]}}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [2]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c', 'exprList': [2]}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [2]}]}}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'q', 'exprList': [3]}]}}, {'type': 'assignmentStatement', 'assign': {'type': 'MEASURE_ASSIGN', 'indexIdList': [{'id': 'c', 'exprList': [3]}], 'qmeas': {'type': 'MEASURE', 'indexIdList': [{'id': 'q', 'exprList': [3]}]}}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'bit', 'id': 'c', 'designator': 4}}]
Success!
Trying File ./examples/defcal.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: []
Declarations: []
Success!
Trying File ./examples/ipe.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': [], 'id': 'q'}}, {'type': 'quantumDeclaration', 'decl': {'type': 'quantumDeclaration', 'qtype': 'qubit', 'designators': [], 'id': 'r'}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'q', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'RESET', 'indexIdList': [{'id': 'r', 'exprList': []}]}}, {'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'h', 'mods': [], 'exps': [], 'indexIdList': [{'id': 'r', 'exprList': []}]}}]
Declarations: [{'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'n', 'expr': 10}}, {'type': 'classicalDeclaration', 'decl': {'type': 'constant', 'id': 'theta', 'expr': 1.1785714285714286}}, {'type': 'classicalDeclaration', 'decl': {'type': 'single', 'id': 'c', 'designator': 0}}, {'type': 'classicalDeclaration', 'decl': {'type': 'single', 'id': 'power', 'designator': 0, 'expr': 1}}]
Success!
Trying File ./examples/cphase.qasm
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
ANTLR runtime and generated code versions disagree: 4.9.2!=4.7.2
Statements: [{'type': 'quantumInstruction', 'instruction': {'type': 'quantumGateCall', 'name': 'cphase', 'mods': [], 'exps': [1.5714285714285714], 'indexIdList': [{'id': 'q', 'exprList': [0]}, {'id': 'q', 'exprList': [1]}]}}]
Declarations: []
Success!
Success Rate: 100%
Failed Files: None!
